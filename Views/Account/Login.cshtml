@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@model BlogReview.ViewModels.LoginViewModel
@{
    ViewData["Title"] = Localizer["LoginBanner"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    bool blocked = false;
}

<h1>@Localizer["LoginBanner"]</h1>
<h3 style="color: red;" id="blockedElement"></h3>
<hr />
<script>
    const urlParams = new URLSearchParams(window.location.search);
    const blocked = urlParams.get('blocked');

    if (blocked === 'True') {
        var blockEl = document.getElementById("blockedElement");
        blockEl.innerText = '@Localizer["UserBlocked"]';
    }
</script>

<div class="centered">
    <div class="card" style="width: 400px; margin: 0 auto;">
        <div class="card-body d-flex justify-content-center align-items-center text-center">
            <form method="post" asp-action="ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl">
                <div class="form-group">
                    <button class="btn btn-lg btn-block btn-primary" style="background-color: #dd4b39;"
                            type="submit" name="provider" value="Google">
                        <i class="fab fa-google me-2"></i>@Localizer["SignInWith"] Google
                    </button>
                </div>
                <div class="form-group">
                    <button class="btn btn-lg btn-block btn-primary mb-2" style="background-color: #3b5998;"
                            type="submit" name="provider" value="LinkedIn">
                        <i class="fa-brands fa-linkedin-in me-2"></i>@Localizer["SignInWith"] LinkedIn
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>