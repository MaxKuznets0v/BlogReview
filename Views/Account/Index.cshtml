@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model BlogReview.ViewModels.ProfileView

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool editAllowed = bool.Parse(ViewData["EditAllowed"].ToString());
    ViewData["Title"] = Model.Author.UserName;
    string allowedCharacters = ViewData["AllowedCharacters"].ToString();
}

<link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.css" />
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.js"></script>


<h1>@Localizer["ProfileBanner"] @Model.Author.UserName</h1>
<h6 style="color: gray;">@Localizer["RatingBanner"]: @Model.Rating</h6>
@if (editAllowed)
{
    <div class="d-flex align-items-center">
        <button class="btn btn-primary" id="change-username-btn">@Localizer["ChangeUsernameButton"]</button>
        <div id="username-input-container" style="display:none;">
            <input type="text" class="form-control" id="new-username-input">
            <button class="btn btn-success" id="submit-username-btn">@Localizer["ChangeUserNameSubmitButton"]</button>
            <div class="invalid-feedback" id="username-input-error" style="display:none;">
                @Localizer["InvalidUsernameSign"]! <br />
                (@Localizer["AllowedSign"]: @allowedCharacters)
            </div>
        </div>
    </div>
}
<hr />
<h3>@Localizer["ArticleListBanner"]</h3>

@if (editAllowed)
{
    <p>
        <a asp-action="CreateArticle" asp-controller="Feed" asp-route-authorId="@Model.Author.Id" class="btn btn-sm btn-secondary">@Localizer["CreateNewArticle"]</a>
    </p>
}
<table id="articles" class="table">
    <thead>
        <tr>
            <th>
                @Localizer["ReviewNameBanner"]
            </th>
            <th>
                @Localizer["ReviewingPieceBanner"]
            </th>
            <th>
                @Localizer["RatingBanner"]
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Articles)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Article.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.Article.ArticleObject.Name)</td>
                <td>@item.DisplayRating(Localizer["NArating"].Value)</td>
                <td>
                    <div class="d-flex flex-column flex-sm-row align-items-center">
                        <a class="btn btn-sm btn-secondary me-2" asp-action="Article" asp-controller="Feed" asp-route-id="@item.Article.Id">@Localizer["ViewButton"]</a>
                        @if (editAllowed)
                        {
                            <a class="btn btn-sm btn-secondary me-2" asp-action="CreateArticle" asp-controller="Feed" asp-route-id="@item.Article.Id">@Localizer["EditButton"]</a>
                            <form method="post" action="@Url.Action("DeleteArticle", "Feed", new { id = item.Article.Id, profileId = item.Article.AuthorId })">
                                <button type="submit" class="btn btn-sm btn-danger">@Localizer["DeleteButton"]</button>
                            </form>
                        }
                    </div>
                </td>
            </tr>
        }
    </tbody>

</table>

<script>
    var table = table = new DataTable('#articles', {
        language: DataTablelanguage,
        columnDefs: [
            { 
                targets: 3, orderable: false, searchable: false 
            },
            {
                "targets": 2,
                "render": function (data, type, full, meta) {
                    if (type === 'display') {
                        return data;
                    }
                    return (data === '@Localizer["NArating"]') ? 0 : parseFloat(data.split("/")[0]);
                }
            }
        ]
    });
    var allowedCharacters = '@allowedCharacters'.split("");
    var usernameInput = $("#new-username-input");
    var submitBtn = $("#submit-username-btn");
    var errorDiv = $("#username-input-error");

    function validateUsername(username) {
        for (var i = 0; i < username.length; i++) {
            if (allowedCharacters.indexOf(username[i]) === -1) {
                return false;
            }
        }
        return true;
    }

    $("#change-username-btn").click(function() {
        $("#username-input-container").show();
        $(this).hide();
        usernameInput.focus();
    });

    submitBtn.click(function() {
        var newUsername = usernameInput.val();
        if (!validateUsername(newUsername)) {
            errorDiv.show();
            return;
        }
        errorDiv.hide();
        let params = new URLSearchParams();
            params.append('userId', '@Model.Author.Id');
            params.append('userName', newUsername);
            fetch('@Url.Action("SetUserName", "Account")', {
                method: "POST",
                body: params
            })
            .then(resp => window.location = resp.url );
    });
</script>