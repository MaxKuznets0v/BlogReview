@using BlogReview.Models
@model Article

@{
    ViewData["Title"] = "Create article";
}
@{
    var groupNames = Enum.GetNames(typeof(ArticleGroup)).ToList();
    bool existing = Model != null && Model.Id != Guid.Empty;
}

<link id="editorStyle" rel="stylesheet" href="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css">
<script src="https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js"></script>

<div>
    <form onsubmit="return validate()" action='@Url.Action("Article", "Feed")' method="POST" style="max-width: 800px; margin: 0 auto;">
        <input hidden asp-for=Id />
        <div class="form-group">
            <label for="title">Title</label>
            <input asp-for=Title type="text" class="form-control" id="title" placeholder="Article title" required>
        </div>
        <div class="form-group">
            <label for="articleEditor">Content</label>
            <textarea asp-for=Content class="form-control" id="articleEditor" rows="6"></textarea>
            <div class="invalid-feedback">Article content is required</div>
        </div>
        <div class="form-group">
            <label for="rating">Rating</label>
            <input asp-for=Rating type="number" class="form-control" id="rating" placeholder="Rating" min="0" max="10" required>
        </div>
        <div class="form-group">
            <label for="articleObjectName">Piece of art name</label>
            <input asp-for=ArticleObject.Name type="text" class="form-control" id="articleObjectName" placeholder="Piece of art name" disabled="@(existing)" required>
        </div>
        <div class="form-group">
            <label for="group">Piece of art group</label>
            <select asp-for="ArticleObject.Group" class="form-control" id="group" disabled="@(existing)">
                @foreach (var groupName in groupNames)
                {
                    <option value="@groupName">@groupName</option>
                }
            </select>
        </div>
        <button type="submit" class="btn btn-secondary mt-2">Submit</button>
    </form>

    <script>
        const darkModeStyle = "https://cdn.rawgit.com/CoffeePerry/simplemde-theme-bootstrap-dark/master/dist/simplemde-theme-bootstrap-dark.min.css";
        const lightModeStyle = "https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css";
        var editor = new SimpleMDE({
            element: document.getElementById("articleEditor"), forceSync: true });
        var lightModeButton = document.getElementById('btnSwitch');
        var modeLink = document.getElementById('editorStyle');
        var mode = localStorage.getItem("theme");
        if (mode == 'dark') {
            modeLink.href = darkModeStyle;
        } else {
            modeLink.href = lightModeStyle;
        }
        lightModeButton.addEventListener("click", function () {
            if (mode == 'light') {
                modeLink.href = darkModeStyle;
                mode = "dark";
            } else {
                modeLink.href = lightModeStyle;
                mode = "light";
            }
        })
        function validate() {
            var res = editor.value() !== "" && editor.value() != null;
            var field = document.getElementById("articleEditor");
            if (!res)
            {
                field.classList.add("is-invalid");
            } else {
                field.classList.remove("is-invalid");
            }
            return res;
        }
    </script>

</div>